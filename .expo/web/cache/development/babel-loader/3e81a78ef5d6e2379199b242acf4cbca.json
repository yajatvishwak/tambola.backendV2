{"ast":null,"code":"import Constants from \"expo-constants\";\nexport var prodUrl = \"https://someapp.herokuapp.com\";\nvar ENV = {\n  dev: {\n    apiUrl: \"http://192.168.0.112:3000\"\n  },\n  staging: {\n    apiUrl: prodUrl\n  },\n  prod: {\n    apiUrl: prodUrl\n  }\n};\n\nfunction getEnvVars() {\n  var env = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  if (env === null || env === undefined || env === \"\") return ENV.dev;\n  if (env.indexOf(\"dev\") !== -1) return ENV.dev;\n  if (env.indexOf(\"staging\") !== -1) return ENV.staging;\n  if (env.indexOf(\"prod\") !== -1) return ENV.prod;\n}\n\nexport default getEnvVars(Constants.manifest.releaseChannel);","map":{"version":3,"sources":["/media/yajat-vishwakk/MainHDD/Coding/Projects/TambolaV2/frontend/Tambola/variable.js"],"names":["Constants","prodUrl","ENV","dev","apiUrl","staging","prod","getEnvVars","env","undefined","indexOf","manifest","releaseChannel"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,gBAAtB;AAEA,OAAO,IAAMC,OAAO,GAAG,+BAAhB;AAEP,IAAMC,GAAG,GAAG;AACVC,EAAAA,GAAG,EAAE;AACHC,IAAAA,MAAM,EAAE;AADL,GADK;AAIVC,EAAAA,OAAO,EAAE;AACPD,IAAAA,MAAM,EAAEH;AADD,GAJC;AAOVK,EAAAA,IAAI,EAAE;AACJF,IAAAA,MAAM,EAAEH;AADJ;AAPI,CAAZ;;AAYA,SAASM,UAAT,GAA8B;AAAA,MAAVC,GAAU,uEAAJ,EAAI;AAC5B,MAAIA,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAKC,SAAxB,IAAqCD,GAAG,KAAK,EAAjD,EAAqD,OAAON,GAAG,CAACC,GAAX;AACrD,MAAIK,GAAG,CAACE,OAAJ,CAAY,KAAZ,MAAuB,CAAC,CAA5B,EAA+B,OAAOR,GAAG,CAACC,GAAX;AAC/B,MAAIK,GAAG,CAACE,OAAJ,CAAY,SAAZ,MAA2B,CAAC,CAAhC,EAAmC,OAAOR,GAAG,CAACG,OAAX;AACnC,MAAIG,GAAG,CAACE,OAAJ,CAAY,MAAZ,MAAwB,CAAC,CAA7B,EAAgC,OAAOR,GAAG,CAACI,IAAX;AACjC;;AAED,eAAeC,UAAU,CAACP,SAAS,CAACW,QAAV,CAAmBC,cAApB,CAAzB","sourcesContent":["import Constants from \"expo-constants\";\n\nexport const prodUrl = \"https://someapp.herokuapp.com\";\n\nconst ENV = {\n  dev: {\n    apiUrl: \"http://192.168.0.112:3000\",\n  },\n  staging: {\n    apiUrl: prodUrl,\n  },\n  prod: {\n    apiUrl: prodUrl,\n  },\n};\n\nfunction getEnvVars(env = \"\") {\n  if (env === null || env === undefined || env === \"\") return ENV.dev;\n  if (env.indexOf(\"dev\") !== -1) return ENV.dev;\n  if (env.indexOf(\"staging\") !== -1) return ENV.staging;\n  if (env.indexOf(\"prod\") !== -1) return ENV.prod;\n}\n\nexport default getEnvVars(Constants.manifest.releaseChannel);\n"]},"metadata":{},"sourceType":"module"}