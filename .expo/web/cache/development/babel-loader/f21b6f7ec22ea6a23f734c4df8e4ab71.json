{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\n\nvar storeData = function storeData(value) {\n  var jsonValue;\n  return _regeneratorRuntime.async(function storeData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          jsonValue = JSON.stringify(value);\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"@globalState\", jsonValue));\n\n        case 4:\n          console.log(\"Stored\" + jsonValue);\n          _context.next = 11;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n          alert(\"File permissions not set - Write Error\");\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\n\nvar getData = function getData() {\n  var jsonValue;\n  return _regeneratorRuntime.async(function getData$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@globalState\"));\n\n        case 3:\n          jsonValue = _context2.sent;\n          return _context2.abrupt(\"return\", jsonValue != null ? JSON.parse(jsonValue) : null);\n\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n          alert(\"File permissions not set- Read Error\");\n\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\n\nvar removeItemValue = function removeItemValue() {\n  return _regeneratorRuntime.async(function removeItemValue$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.removeItem(\"@globalState\"));\n\n        case 3:\n          return _context3.abrupt(\"return\", true);\n\n        case 6:\n          _context3.prev = 6;\n          _context3.t0 = _context3[\"catch\"](0);\n          return _context3.abrupt(\"return\", false);\n\n        case 9:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n};\n\nexports.storeData = storeData;\nexports.getData = getData;\nexports.deleteData = removeItemValue;","map":{"version":3,"sources":["/media/yajat-vishwakk/MainHDD/Coding/Projects/TambolaV2/frontend/Tambola/utility/AsyncStore.js"],"names":["AsyncStorage","storeData","value","jsonValue","JSON","stringify","setItem","console","log","alert","getData","getItem","parse","removeItemValue","removeItem","exports","deleteData"],"mappings":";AAAA,OAAOA,YAAP,MAAyB,uCAAzB;;AACA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAERC,UAAAA,SAFQ,GAEIC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAFJ;AAAA;AAAA,2CAGRF,YAAY,CAACM,OAAb,CAAqB,cAArB,EAAqCH,SAArC,CAHQ;;AAAA;AAIdI,UAAAA,OAAO,CAACC,GAAR,CAAY,WAAWL,SAAvB;AAJc;AAAA;;AAAA;AAAA;AAAA;AAMdI,UAAAA,OAAO,CAACC,GAAR;AACAC,UAAAA,KAAK,CAAC,wCAAD,CAAL;;AAPc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB;;AAUA,IAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEYV,YAAY,CAACW,OAAb,CAAqB,cAArB,CAFZ;;AAAA;AAENR,UAAAA,SAFM;AAAA,4CAGLA,SAAS,IAAI,IAAb,GAAoBC,IAAI,CAACQ,KAAL,CAAWT,SAAX,CAApB,GAA4C,IAHvC;;AAAA;AAAA;AAAA;AAKZI,UAAAA,OAAO,CAACC,GAAR;AACAC,UAAAA,KAAK,CAAC,sCAAD,CAAL;;AANY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB;;AASA,IAAMI,eAAe,GAAG,SAAlBA,eAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEdb,YAAY,CAACc,UAAb,CAAwB,cAAxB,CAFc;;AAAA;AAAA,4CAGb,IAHa;;AAAA;AAAA;AAAA;AAAA,4CAKb,KALa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AASAC,OAAO,CAACd,SAAR,GAAoBA,SAApB;AACAc,OAAO,CAACL,OAAR,GAAkBA,OAAlB;AACAK,OAAO,CAACC,UAAR,GAAqBH,eAArB","sourcesContent":["import AsyncStorage from \"@react-native-community/async-storage\";\nconst storeData = async (value) => {\n  try {\n    const jsonValue = JSON.stringify(value);\n    await AsyncStorage.setItem(\"@globalState\", jsonValue);\n    console.log(\"Stored\" + jsonValue);\n  } catch (e) {\n    console.log(e);\n    alert(\"File permissions not set - Write Error\");\n  }\n};\nconst getData = async () => {\n  try {\n    const jsonValue = await AsyncStorage.getItem(\"@globalState\");\n    return jsonValue != null ? JSON.parse(jsonValue) : null;\n  } catch (e) {\n    console.log(e);\n    alert(\"File permissions not set- Read Error\");\n  }\n};\nconst removeItemValue = async () => {\n  try {\n    await AsyncStorage.removeItem(\"@globalState\");\n    return true;\n  } catch (exception) {\n    return false;\n  }\n};\n\nexports.storeData = storeData;\nexports.getData = getData;\nexports.deleteData = removeItemValue;\n"]},"metadata":{},"sourceType":"module"}