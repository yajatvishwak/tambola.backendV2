{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/media/yajat-vishwakk/MainHDD/Coding/Projects/TambolaV2/frontend/Tambola/app/Game/components/Claim.js\";\nimport React, { Component, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Icon from \"@expo/vector-icons/EvilIcons\";\nimport makeaCall from \"../../../utility/networkCall\";\nimport env from \"../../../variable\";\nimport Spinner from \"react-native-loading-spinner-overlay\";\n\nfunction ShoutModal(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      spinner = _useState2[0],\n      setspinner = _useState2[1];\n\n  var category = props.category;\n  var ticket = props.ticket;\n  var cats = category.map(function (item) {\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        setspinner(true);\n        makeaCall(\"POST\", env.apiUrl + \"/game/checkWinner\", {\n          roomID: props.roomID,\n          ticket: ticket,\n          username: props.username,\n          type: item\n        }).then(function (res) {\n          setspinner(false);\n\n          if (res === true) {\n            console.log(\"you won\");\n            props.close();\n          } else if (res.code == \"DWC\") {\n            alert(res.user + \" won this claim already. Try again with some other claim!\");\n            props.close();\n          } else {\n            alert(\"A few numbers from your ticket were not called, please check and try again\");\n            props.close();\n          }\n        }).catch(function (err) {\n          return alert(\"There is some problem with the network\");\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: styles.rect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: styles.number,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, item)), React.createElement(Text, {\n      style: styles.subtext,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, item));\n  });\n  return React.createElement(ScrollView, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    hidden: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), React.createElement(Spinner, {\n    visible: spinner,\n    textContent: \"Checking Request, Hold On\",\n    textStyle: styles.spinnerTextStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: styles.whichCategory,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, \"Which Category? \\uD83D\\uDC40\"), React.createElement(View, {\n    style: styles.groupRow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, cats), React.createElement(TouchableOpacity, {\n    style: styles.button1,\n    onPress: props.close,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, React.createElement(Icon, {\n    name: \"close\",\n    style: styles.icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  })));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"rgba(227,214,214,1)\"\n  },\n  subtext: {\n    alignSelf: \"center\"\n  },\n  rect: {\n    width: 100,\n    height: 100,\n    backgroundColor: \"rgba(255,255,255,1)\",\n    borderRadius: 27,\n    borderWidth: 3,\n    borderColor: \"#000000\",\n    alignContent: \"center\",\n    justifyContent: \"center\",\n    margin: 10\n  },\n  number: {\n    fontFamily: \"roboto-500\",\n    color: \"#121212\",\n    fontSize: 60,\n    alignSelf: \"center\"\n  },\n  groupRow: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    marginTop: 100,\n    flexWrap: \"wrap\"\n  },\n  whichCategory: {\n    fontFamily: \"roboto-700\",\n    color: \"#121212\",\n    fontSize: 30,\n    alignSelf: \"center\",\n    marginTop: 120\n  },\n  button1: {\n    width: 67,\n    height: 67,\n    backgroundColor: \"rgba(48,71,94,1)\",\n    borderRadius: 100,\n    marginBottom: 20,\n    alignSelf: \"center\",\n    marginTop: 50,\n    justifyContent: \"center\",\n    alignContent: \"center\"\n  },\n  icon: {\n    color: \"rgba(255,255,255,1)\",\n    fontSize: 40,\n    height: 44,\n    width: 40,\n    marginTop: 11,\n    marginLeft: 13\n  }\n});\nexport default ShoutModal;","map":{"version":3,"sources":["/media/yajat-vishwakk/MainHDD/Coding/Projects/TambolaV2/frontend/Tambola/app/Game/components/Claim.js"],"names":["React","Component","useState","Icon","makeaCall","env","Spinner","ShoutModal","props","spinner","setspinner","category","ticket","cats","map","item","apiUrl","roomID","username","type","then","res","console","log","close","code","alert","user","catch","err","styles","rect","number","subtext","container","spinnerTextStyle","whichCategory","groupRow","button1","icon","StyleSheet","create","flex","backgroundColor","alignSelf","width","height","borderRadius","borderWidth","borderColor","alignContent","justifyContent","margin","fontFamily","color","fontSize","flexDirection","marginTop","flexWrap","marginBottom","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\nimport {\n  StyleSheet,\n  View,\n  StatusBar,\n  Text,\n  ScrollView,\n  TouchableOpacity,\n} from \"react-native\";\nimport Icon from \"react-native-vector-icons/EvilIcons\";\nimport makeaCall from \"../../../utility/networkCall\";\nimport env from \"../../../variable\";\nimport Spinner from \"react-native-loading-spinner-overlay\";\nfunction ShoutModal(props) {\n  const [spinner, setspinner] = useState(false);\n  var category = props.category;\n  var ticket = props.ticket;\n  var cats = category.map((item) => {\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          setspinner(true);\n          makeaCall(\"POST\", env.apiUrl + \"/game/checkWinner\", {\n            roomID: props.roomID,\n            ticket: ticket,\n            username: props.username,\n            type: item,\n          })\n            .then((res) => {\n              setspinner(false);\n              //console.log(res);\n              if (res === true) {\n                console.log(\"you won\");\n                props.close();\n              } else if (res.code == \"DWC\") {\n                alert(\n                  res.user +\n                    \" won this claim already. Try again with some other claim!\"\n                );\n                props.close();\n              } else {\n                alert(\n                  \"A few numbers from your ticket were not called, please check and try again\"\n                );\n                props.close();\n              }\n            })\n            .catch((err) => alert(\"There is some problem with the network\"));\n        }}\n      >\n        <View style={styles.rect}>\n          <Text style={styles.number}>{item}</Text>\n        </View>\n        <Text style={styles.subtext}>{item}</Text>\n      </TouchableOpacity>\n    );\n  });\n\n  return (\n    <ScrollView style={styles.container}>\n      <StatusBar hidden />\n      <Spinner\n        visible={spinner}\n        textContent={\"Checking Request, Hold On\"}\n        textStyle={styles.spinnerTextStyle}\n      />\n\n      <Text style={styles.whichCategory}>Which Category? 👀</Text>\n      <View style={styles.groupRow}>{cats}</View>\n\n      <TouchableOpacity style={styles.button1} onPress={props.close}>\n        <Icon name=\"close\" style={styles.icon}></Icon>\n      </TouchableOpacity>\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"rgba(227,214,214,1)\",\n  },\n  subtext: {\n    alignSelf: \"center\",\n  },\n\n  rect: {\n    width: 100,\n    height: 100,\n    backgroundColor: \"rgba(255,255,255,1)\",\n    borderRadius: 27,\n    borderWidth: 3,\n    borderColor: \"#000000\",\n    alignContent: \"center\",\n    justifyContent: \"center\",\n    margin: 10,\n  },\n  number: {\n    fontFamily: \"roboto-500\",\n    color: \"#121212\",\n    fontSize: 60,\n    alignSelf: \"center\",\n  },\n\n  groupRow: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    marginTop: 100,\n    flexWrap: \"wrap\",\n  },\n\n  whichCategory: {\n    fontFamily: \"roboto-700\",\n    color: \"#121212\",\n    fontSize: 30,\n    alignSelf: \"center\",\n    marginTop: 120,\n  },\n\n  button1: {\n    width: 67,\n    height: 67,\n    backgroundColor: \"rgba(48,71,94,1)\",\n    borderRadius: 100,\n    marginBottom: 20,\n    alignSelf: \"center\",\n    marginTop: 50,\n    justifyContent: \"center\",\n    alignContent: \"center\",\n  },\n  icon: {\n    color: \"rgba(255,255,255,1)\",\n    fontSize: 40,\n    height: 44,\n    width: 40,\n    marginTop: 11,\n    marginLeft: 13,\n  },\n});\n\nexport default ShoutModal;\n"]},"metadata":{},"sourceType":"module"}