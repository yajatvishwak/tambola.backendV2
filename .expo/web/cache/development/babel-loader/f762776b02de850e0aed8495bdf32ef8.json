{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/media/yajat-vishwakk/MainHDD/Coding/Projects/TambolaV2/frontend/Tambola/app/Admin/Leaderboard.js\";\nimport React, { Component, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport WinnerView from \"./components/WinnerView\";\nimport Axios from \"axios\";\nimport Global from \"../../utility/Global\";\nimport env from \"../../variable\";\nimport { AdMobBanner } from \"expo-ads-admob\";\n\nfunction Winner(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      winners = _useState2[0],\n      setwinners = _useState2[1];\n\n  var handleRefresh = function handleRefresh() {\n    Axios.post(env.apiUrl + \"/game/getWinners\", {\n      roomID: Global.admin.roomID\n    }).then(function (res) {\n      var data = res.data;\n      var twinners = [];\n\n      for (var prop in data) {\n        twinners.push(prop + \": \" + data[prop]);\n      }\n\n      setwinners(twinners);\n    });\n  };\n\n  return React.createElement(ScrollView, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    hidden: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: {\n      alignSelf: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, React.createElement(AdMobBanner, {\n    bannerSize: \"fullBanner\",\n    adUnitID: \"ca-app-pub-7508456089542607/4022655933\",\n    servePersonalizedAds: true,\n    onDidFailToReceiveAdWithError: function onDidFailToReceiveAdWithError(bannerError) {\n      return console.log(bannerError);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  })), React.createElement(Text, {\n    style: styles.leaderboard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Leaderboard\"), React.createElement(Text, {\n    style: styles.realtimeLeaderboard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Realtime Leaderboard\"), React.createElement(WinnerView, {\n    style: styles.winnerView,\n    winners: winners,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: handleRefresh,\n    style: styles.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Refresh\")));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"rgba(227,214,214,1)\"\n  },\n  button: {\n    width: 200,\n    height: 40,\n    backgroundColor: \"rgba(242,163,101,1)\",\n    shadowColor: \"rgba(0,0,0,1)\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    elevation: 5,\n    shadowOpacity: 0.3,\n    shadowRadius: 25,\n    borderRadius: 20,\n    marginBottom: 10,\n    alignSelf: \"center\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  leaderboard: {\n    fontFamily: \"roboto-900\",\n    color: \"#121212\",\n    fontSize: 25,\n    marginTop: 41,\n    marginLeft: 23\n  },\n  winnerView: {\n    height: 528,\n    width: 324,\n    alignSelf: \"center\",\n    marginTop: 20\n  },\n  realtimeLeaderboard: {\n    fontFamily: \"roboto-regular\",\n    color: \"#121212\",\n    marginLeft: 25\n  }\n});\nexport default Winner;","map":{"version":3,"sources":["/media/yajat-vishwakk/MainHDD/Coding/Projects/TambolaV2/frontend/Tambola/app/Admin/Leaderboard.js"],"names":["React","Component","useState","WinnerView","Axios","Global","env","AdMobBanner","Winner","props","winners","setwinners","handleRefresh","post","apiUrl","roomID","admin","then","res","data","twinners","prop","push","styles","container","alignSelf","bannerError","console","log","leaderboard","realtimeLeaderboard","winnerView","button","StyleSheet","create","flex","backgroundColor","width","height","shadowColor","shadowOffset","elevation","shadowOpacity","shadowRadius","borderRadius","marginBottom","justifyContent","alignItems","fontFamily","color","fontSize","marginTop","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\nimport {\n  StyleSheet,\n  ScrollView,\n  StatusBar,\n  Text,\n  View,\n  TouchableOpacity,\n} from \"react-native\";\nimport WinnerView from \"./components/WinnerView\";\nimport Axios from \"axios\";\nimport Global from \"../../utility/Global\";\nimport env from \"../../variable\";\nimport { AdMobBanner } from \"expo-ads-admob\";\n\nfunction Winner(props) {\n  const [winners, setwinners] = useState([]);\n  const handleRefresh = () => {\n    Axios.post(env.apiUrl + \"/game/getWinners\", {\n      roomID: Global.admin.roomID,\n    }).then((res) => {\n      const data = res.data;\n      const twinners = [];\n      for (var prop in data) {\n        twinners.push(prop + \": \" + data[prop]);\n      }\n      setwinners(twinners);\n    });\n  };\n\n  return (\n    <ScrollView style={styles.container}>\n      <StatusBar hidden />\n      <View\n        style={{\n          alignSelf: \"center\",\n        }}\n      >\n        <AdMobBanner\n          bannerSize=\"fullBanner\"\n          adUnitID=\"ca-app-pub-7508456089542607/4022655933\"\n          servePersonalizedAds\n          onDidFailToReceiveAdWithError={(bannerError) =>\n            console.log(bannerError)\n          }\n        />\n      </View>\n      <Text style={styles.leaderboard}>Leaderboard</Text>\n      <Text style={styles.realtimeLeaderboard}>Realtime Leaderboard</Text>\n\n      <WinnerView style={styles.winnerView} winners={winners}></WinnerView>\n      <TouchableOpacity onPress={handleRefresh} style={styles.button}>\n        <Text>Refresh</Text>\n      </TouchableOpacity>\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"rgba(227,214,214,1)\",\n  },\n  button: {\n    width: 200,\n    height: 40,\n    backgroundColor: \"rgba(242,163,101,1)\",\n    shadowColor: \"rgba(0,0,0,1)\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    elevation: 5,\n    shadowOpacity: 0.3,\n    shadowRadius: 25,\n    borderRadius: 20,\n\n    marginBottom: 10,\n    alignSelf: \"center\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  leaderboard: {\n    fontFamily: \"roboto-900\",\n    color: \"#121212\",\n    fontSize: 25,\n    marginTop: 41,\n    marginLeft: 23,\n  },\n  winnerView: {\n    height: 528,\n    width: 324,\n    alignSelf: \"center\",\n    marginTop: 20,\n  },\n\n  realtimeLeaderboard: {\n    fontFamily: \"roboto-regular\",\n    color: \"#121212\",\n\n    marginLeft: 25,\n  },\n});\n\nexport default Winner;\n"]},"metadata":{},"sourceType":"module"}