{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/media/yajat-vishwakk/MainHDD/Coding/Projects/TambolaV2/frontend/Tambola/app/RoomCreation/RoomCreation.js\";\nimport React, { Component, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Axios from \"axios\";\nimport Global from \"../../utility/Global\";\nimport env from \"../../variable\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { AdMobBanner } from \"expo-ads-admob\";\n\nfunction RoomCreation(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      roomid = _useState2[0],\n      setroomid = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      type = _useState4[0],\n      settype = _useState4[1];\n\n  var _useState5 = useState(10),\n      _useState6 = _slicedToArray(_useState5, 2),\n      maxuser = _useState6[0],\n      setmaxuser = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      roomName = _useState8[0],\n      setroomName = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      description = _useState10[0],\n      setdescription = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      password = _useState12[0],\n      setpassword = _useState12[1];\n\n  var navigation = useNavigation();\n\n  var capitalize = function capitalize(s) {\n    if (typeof s !== \"string\") return \"\";\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  };\n\n  var handlePress = function handlePress() {\n    if (roomid.length === 0 || type.length === 0 || maxuser === 0 || roomName.length === 0 || description.length === 0) {\n      alert(\"Please fill in all the fields\");\n    } else if (type === \"Open\" || type === \"Private\" || type === \"open\" || type === \"private\") {\n      if ((type === \"private\" || type === \"Private\") && password.length === 0) {\n        alert(\"Please fill in Password \");\n      } else {\n        Axios.post(env.apiUrl + \"/admin/createSession\", {\n          roomID: roomid,\n          type: capitalize(type),\n          user: Global.username,\n          settings: {\n            category: [\"FH\", \"FR\", \"SR\", \"TR\"],\n            maxUsers: maxuser\n          },\n          deets: {\n            Roomname: roomName,\n            description: description\n          },\n          secretKey: password\n        }).then(function (res) {\n          var data = res.data;\n\n          if (data === true) {\n            alert(\"Room Created!\");\n            navigation.replace(\"Feed\");\n          } else {\n            alert(\"Error in making room: The RoomID specified has already been used, choose another RoomID  \");\n          }\n        });\n      }\n    } else {\n      alert(\"Error in creating session: Check all your fields\");\n    }\n  };\n\n  return React.createElement(ScrollView, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    hidden: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: {\n      alignSelf: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, React.createElement(AdMobBanner, {\n    bannerSize: \"fullBanner\",\n    adUnitID: \"ca-app-pub-7508456089542607/4022655933\",\n    servePersonalizedAds: true,\n    onDidFailToReceiveAdWithError: function onDidFailToReceiveAdWithError(bannerError) {\n      return console.log(bannerError);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  })), React.createElement(Text, {\n    style: styles.createRoom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, \"Create Room\"), React.createElement(Text, {\n    style: styles.loremIpsum1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, \"Live sessions to host Tambola\"), React.createElement(View, {\n    style: styles.wrap,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Room Name\",\n    style: styles.placeholder,\n    onChangeText: function onChangeText(text) {\n      setroomName(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"RoomID\",\n    style: styles.placeholder,\n    onChangeText: function onChangeText(text) {\n      setroomid(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Type(type Open or Private)\",\n    style: styles.placeholder,\n    onChangeText: function onChangeText(text) {\n      settype(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Room Password(Leave empty if Open Room)\",\n    style: styles.placeholder,\n    onChangeText: function onChangeText(text) {\n      setpassword(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Maximum Users(should be more than 10)\",\n    style: styles.placeholder,\n    onChangeText: function onChangeText(text) {\n      setmaxuser(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Description\",\n    multiline: true,\n    style: styles.placeholderd,\n    onChangeText: function onChangeText(text) {\n      setdescription(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.button1,\n    onPress: handlePress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.createRoom2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, \"Create Room\"))));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"rgba(227,214,214,1)\"\n  },\n  wrap: {\n    alignSelf: \"center\"\n  },\n  loremIpsum1: {\n    fontFamily: \"roboto-regular\",\n    color: \"#121212\",\n    marginTop: 5,\n    marginLeft: 24\n  },\n  createRoom: {\n    fontFamily: \"roboto-900\",\n    color: \"#121212\",\n    fontSize: 25,\n    marginTop: 35,\n    marginLeft: 23\n  },\n  placeholder: {\n    fontFamily: \"roboto-regular\",\n    color: \"#121212\",\n    height: 45,\n    width: 309,\n    backgroundColor: \"rgba(230, 230, 230,1)\",\n    borderRadius: 15,\n    margin: 20,\n    textAlign: \"center\"\n  },\n  placeholderd: {\n    fontFamily: \"roboto-regular\",\n    color: \"#121212\",\n    height: 100,\n    width: 309,\n    backgroundColor: \"rgba(230, 230, 230,1)\",\n    borderRadius: 15,\n    margin: 20,\n    textAlign: \"center\"\n  },\n  button1: {\n    width: 140,\n    height: 60,\n    alignSelf: \"center\",\n    backgroundColor: \"rgba(242,163,101,1)\",\n    borderRadius: 9,\n    marginBottom: 20\n  },\n  createRoom2: {\n    fontFamily: \"roboto-700\",\n    color: \"rgba(255,255,255,1)\",\n    fontSize: 20,\n    marginTop: 18,\n    marginLeft: 12\n  }\n});\nexport default RoomCreation;","map":{"version":3,"sources":["/media/yajat-vishwakk/MainHDD/Coding/Projects/TambolaV2/frontend/Tambola/app/RoomCreation/RoomCreation.js"],"names":["React","Component","useState","Axios","Global","env","useNavigation","AdMobBanner","RoomCreation","props","roomid","setroomid","type","settype","maxuser","setmaxuser","roomName","setroomName","description","setdescription","password","setpassword","navigation","capitalize","s","charAt","toUpperCase","slice","handlePress","length","alert","post","apiUrl","roomID","user","username","settings","category","maxUsers","deets","Roomname","secretKey","then","res","data","replace","styles","container","alignSelf","bannerError","console","log","createRoom","loremIpsum1","wrap","placeholder","text","placeholderd","button1","createRoom2","StyleSheet","create","flex","backgroundColor","fontFamily","color","marginTop","marginLeft","fontSize","height","width","borderRadius","margin","textAlign","marginBottom"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\nimport {\n  StyleSheet,\n  View,\n  StatusBar,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  ScrollView,\n} from \"react-native\";\nimport Axios from \"axios\";\nimport Global from \"../../utility/Global\";\nimport env from \"../../variable\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { AdMobBanner } from \"expo-ads-admob\";\n\nfunction RoomCreation(props) {\n  const [roomid, setroomid] = useState(\"\");\n  const [type, settype] = useState(\"\");\n  const [maxuser, setmaxuser] = useState(10);\n  const [roomName, setroomName] = useState(\"\");\n  const [description, setdescription] = useState(\"\");\n  const [password, setpassword] = useState(\"\");\n  const navigation = useNavigation();\n  const capitalize = (s) => {\n    if (typeof s !== \"string\") return \"\";\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  };\n\n  const handlePress = () => {\n    if (\n      roomid.length === 0 ||\n      type.length === 0 ||\n      maxuser === 0 ||\n      roomName.length === 0 ||\n      description.length === 0\n    ) {\n      alert(\"Please fill in all the fields\");\n    } else if (\n      type === \"Open\" ||\n      type === \"Private\" ||\n      type === \"open\" ||\n      type === \"private\"\n    ) {\n      if ((type === \"private\" || type === \"Private\") && password.length === 0) {\n        alert(\"Please fill in Password \");\n      } else {\n        Axios.post(env.apiUrl + \"/admin/createSession\", {\n          roomID: roomid,\n          type: capitalize(type),\n          user: Global.username,\n          settings: { category: [\"FH\", \"FR\", \"SR\", \"TR\"], maxUsers: maxuser },\n          deets: { Roomname: roomName, description: description },\n          secretKey: password,\n        }).then((res) => {\n          const data = res.data;\n          if (data === true) {\n            alert(\"Room Created!\");\n            navigation.replace(\"Feed\");\n          } else {\n            alert(\n              \"Error in making room: The RoomID specified has already been used, choose another RoomID  \"\n            );\n          }\n        });\n      }\n    } else {\n      alert(\"Error in creating session: Check all your fields\");\n    }\n  };\n\n  return (\n    <ScrollView style={styles.container}>\n      <StatusBar hidden />\n      <View\n        style={{\n          alignSelf: \"center\",\n        }}\n      >\n        <AdMobBanner\n          bannerSize=\"fullBanner\"\n          adUnitID=\"ca-app-pub-7508456089542607/4022655933\"\n          servePersonalizedAds\n          onDidFailToReceiveAdWithError={(bannerError) =>\n            console.log(bannerError)\n          }\n        />\n      </View>\n      <Text style={styles.createRoom}>Create Room</Text>\n      <Text style={styles.loremIpsum1}>Live sessions to host Tambola</Text>\n\n      <View style={styles.wrap}>\n        <TextInput\n          placeholder=\"Room Name\"\n          style={styles.placeholder}\n          onChangeText={(text) => {\n            setroomName(text);\n          }}\n        ></TextInput>\n\n        <TextInput\n          placeholder=\"RoomID\"\n          style={styles.placeholder}\n          onChangeText={(text) => {\n            setroomid(text);\n          }}\n        ></TextInput>\n        <TextInput\n          placeholder=\"Type(type Open or Private)\"\n          style={styles.placeholder}\n          onChangeText={(text) => {\n            settype(text);\n          }}\n        ></TextInput>\n        <TextInput\n          placeholder=\"Room Password(Leave empty if Open Room)\"\n          style={styles.placeholder}\n          onChangeText={(text) => {\n            setpassword(text);\n          }}\n        ></TextInput>\n        <TextInput\n          placeholder=\"Maximum Users(should be more than 10)\"\n          style={styles.placeholder}\n          onChangeText={(text) => {\n            setmaxuser(text);\n          }}\n        ></TextInput>\n        <TextInput\n          placeholder=\"Description\"\n          multiline\n          style={styles.placeholderd}\n          onChangeText={(text) => {\n            setdescription(text);\n          }}\n        ></TextInput>\n\n        <TouchableOpacity style={styles.button1} onPress={handlePress}>\n          <Text style={styles.createRoom2}>Create Room</Text>\n        </TouchableOpacity>\n      </View>\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"rgba(227,214,214,1)\",\n  },\n  wrap: {\n    alignSelf: \"center\",\n  },\n  loremIpsum1: {\n    fontFamily: \"roboto-regular\",\n    color: \"#121212\",\n    marginTop: 5,\n    marginLeft: 24,\n  },\n  createRoom: {\n    fontFamily: \"roboto-900\",\n    color: \"#121212\",\n    fontSize: 25,\n    marginTop: 35,\n    marginLeft: 23,\n  },\n  placeholder: {\n    fontFamily: \"roboto-regular\",\n    color: \"#121212\",\n    height: 45,\n    width: 309,\n    backgroundColor: \"rgba(230, 230, 230,1)\",\n    borderRadius: 15,\n    margin: 20,\n    textAlign: \"center\",\n  },\n  placeholderd: {\n    fontFamily: \"roboto-regular\",\n    color: \"#121212\",\n    height: 100,\n    width: 309,\n    backgroundColor: \"rgba(230, 230, 230,1)\",\n    borderRadius: 15,\n    margin: 20,\n    textAlign: \"center\",\n  },\n\n  button1: {\n    width: 140,\n    height: 60,\n    alignSelf: \"center\",\n    backgroundColor: \"rgba(242,163,101,1)\",\n    borderRadius: 9,\n    marginBottom: 20,\n  },\n  createRoom2: {\n    fontFamily: \"roboto-700\",\n    color: \"rgba(255,255,255,1)\",\n    fontSize: 20,\n    marginTop: 18,\n    marginLeft: 12,\n  },\n});\n\nexport default RoomCreation;\n"]},"metadata":{},"sourceType":"module"}