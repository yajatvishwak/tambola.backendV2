{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/media/yajat-vishwakk/MainHDD/Coding/Projects/TambolaV2/frontend/Tambola/app/Waiting/Waiting.js\";\nimport React, { Component, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { AdMobBanner, setTestDeviceIDAsync, AdMobInterstitial } from \"expo-ads-admob\";\nimport env from \"../../variable\";\nimport Global from \"../../utility/Global\";\n\nvar io = require(\"socket.io-client\");\n\nfunction Waiting(props) {\n  var navigation = useNavigation();\n  var roomID = Global.roomID;\n  var username = Global.username;\n  useEffect(function () {\n    var socket = io(env.apiUrl);\n    socket.on(\"connect\", function () {\n      console.log(\"Connected to the WS server -- Waiting Room\");\n      socket.emit(\"room\", {\n        username: username,\n        room: roomID\n      });\n    });\n    socket.on(\"broadcast\", function (m) {\n      if (m.ready === true) {\n        clearInterval(bigad);\n        navigation.replace(\"Game\");\n      }\n    });\n  }, []);\n\n  var setAd = function setAd() {\n    return _regeneratorRuntime.async(function setAd$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(setTestDeviceIDAsync(\"EMULATOR\"));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var showBigAd = function showBigAd() {\n    return _regeneratorRuntime.async(function showBigAd$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(AdMobInterstitial.setAdUnitID(\"ca-app-pub-3940256099942544/1033173712\"));\n\n          case 2:\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(AdMobInterstitial.requestAdAsync({\n              servePersonalizedAds: true\n            }));\n\n          case 4:\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(AdMobInterstitial.showAdAsync());\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var bigad = setInterval(function () {\n    showBigAd();\n  }, 15000);\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    hidden: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.adView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, React.createElement(AdMobBanner, {\n    bannerSize: \"fullBanner\",\n    adUnitID: \"ca-app-pub-7508456089542607/4293645917\",\n    servePersonalizedAds: true,\n    onDidFailToReceiveAdWithError: function onDidFailToReceiveAdWithError(bannerError) {\n      return console.log(bannerError);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  })), React.createElement(Text, {\n    style: styles.loremIpsum2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"Waiting Room for \", roomID), React.createElement(Icon, {\n    name: \"clock\",\n    style: styles.icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: styles.loremIpsum,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, \"Please wait till the admin \", \"\\n\", \"starts the game. During this time ads will be played, you can safely disregard them.\", \"\\n\", \" DO NOT EXIT THIS PAGE\"), React.createElement(View, {\n    style: styles.adView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, React.createElement(AdMobBanner, {\n    bannerSize: \"smartBannerPortrait\",\n    adUnitID: \"ca-app-pub-7508456089542607/3801378244\",\n    servePersonalizedAds: true,\n    onDidFailToReceiveAdWithError: function onDidFailToReceiveAdWithError(bannerError) {\n      return console.log(bannerError);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  })));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"rgba(236,236,236,1)\",\n    justifyContent: \"center\"\n  },\n  adView: {\n    alignSelf: \"center\"\n  },\n  icon: {\n    color: \"rgba(128,128,128,1)\",\n    fontSize: 200,\n    alignSelf: \"center\"\n  },\n  loremIpsum: {\n    fontFamily: \"roboto-regular\",\n    color: \"#121212\",\n    fontSize: 20,\n    textAlign: \"center\",\n    alignSelf: \"center\"\n  },\n  loremIpsum2: {\n    fontFamily: \"roboto-regular\",\n    color: \"#121212\",\n    fontSize: 25,\n    alignSelf: \"center\"\n  }\n});\nexport default Waiting;","map":{"version":3,"sources":["/media/yajat-vishwakk/MainHDD/Coding/Projects/TambolaV2/frontend/Tambola/app/Waiting/Waiting.js"],"names":["React","Component","useEffect","Icon","useNavigation","AdMobBanner","setTestDeviceIDAsync","AdMobInterstitial","env","Global","io","require","Waiting","props","navigation","roomID","username","socket","apiUrl","on","console","log","emit","room","m","ready","clearInterval","bigad","replace","setAd","showBigAd","setAdUnitID","requestAdAsync","servePersonalizedAds","showAdAsync","setInterval","styles","container","adView","bannerError","loremIpsum2","icon","loremIpsum","StyleSheet","create","flex","backgroundColor","justifyContent","alignSelf","color","fontSize","fontFamily","textAlign"],"mappings":"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","sourcesContent":["import React, { Component, useEffect } from \"react\";\nimport { StyleSheet, View, StatusBar, Text } from \"react-native\";\nimport Icon from \"react-native-vector-icons/MaterialCommunityIcons\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nimport {\n  AdMobBanner,\n  setTestDeviceIDAsync,\n  AdMobInterstitial,\n} from \"expo-ads-admob\";\n\nimport env from \"../../variable\";\nimport Global from \"../../utility/Global\";\nconst io = require(\"socket.io-client\");\n\nfunction Waiting(props) {\n  const navigation = useNavigation();\n  const roomID = Global.roomID;\n  const username = Global.username;\n  useEffect(() => {\n    const socket = io(env.apiUrl);\n    socket.on(\"connect\", function () {\n      console.log(\"Connected to the WS server -- Waiting Room\");\n      socket.emit(\"room\", { username: username, room: roomID });\n    });\n    socket.on(\"broadcast\", (m) => {\n      if (m.ready === true) {\n        clearInterval(bigad);\n        navigation.replace(\"Game\");\n      }\n    });\n  }, []);\n  const setAd = async () => {\n    await setTestDeviceIDAsync(\"EMULATOR\");\n  };\n  const showBigAd = async () => {\n    await AdMobInterstitial.setAdUnitID(\n      \"ca-app-pub-3940256099942544/1033173712\"\n    ); // Test ID, Replace with your-admob-unit-id\n    await AdMobInterstitial.requestAdAsync({ servePersonalizedAds: true });\n    await AdMobInterstitial.showAdAsync();\n  };\n  var bigad = setInterval(() => {\n    showBigAd();\n  }, 15000);\n\n  return (\n    <View style={styles.container}>\n      <StatusBar hidden />\n      <View style={styles.adView}>\n        <AdMobBanner\n          bannerSize=\"fullBanner\"\n          adUnitID=\"ca-app-pub-7508456089542607/4293645917\"\n          servePersonalizedAds\n          onDidFailToReceiveAdWithError={(bannerError) =>\n            console.log(bannerError)\n          }\n        />\n      </View>\n\n      <Text style={styles.loremIpsum2}>Waiting Room for {roomID}</Text>\n      <Icon name=\"clock\" style={styles.icon}></Icon>\n      <Text style={styles.loremIpsum}>\n        Please wait till the admin {\"\\n\"}starts the game. During this time ads\n        will be played, you can safely disregard them.{\"\\n\"} DO NOT EXIT THIS\n        PAGE\n      </Text>\n      <View style={styles.adView}>\n        <AdMobBanner\n          bannerSize=\"smartBannerPortrait\"\n          adUnitID=\"ca-app-pub-7508456089542607/3801378244\"\n          servePersonalizedAds\n          onDidFailToReceiveAdWithError={(bannerError) =>\n            console.log(bannerError)\n          }\n        />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"rgba(236,236,236,1)\",\n    justifyContent: \"center\",\n  },\n  adView: {\n    alignSelf: \"center\",\n  },\n  icon: {\n    color: \"rgba(128,128,128,1)\",\n    fontSize: 200,\n    alignSelf: \"center\",\n  },\n  loremIpsum: {\n    fontFamily: \"roboto-regular\",\n    color: \"#121212\",\n    fontSize: 20,\n    textAlign: \"center\",\n    alignSelf: \"center\",\n  },\n  loremIpsum2: {\n    fontFamily: \"roboto-regular\",\n    color: \"#121212\",\n    fontSize: 25,\n\n    alignSelf: \"center\",\n  },\n});\n\nexport default Waiting;\n"]},"metadata":{},"sourceType":"module"}