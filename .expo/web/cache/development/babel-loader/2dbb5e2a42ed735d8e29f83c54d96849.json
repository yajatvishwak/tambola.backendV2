{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/media/yajat-vishwakk/MainHDD/Coding/Projects/TambolaV2/frontend/Tambola/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { AppLoading } from \"expo\";\nimport * as Font from \"expo-font\";\nimport { NavigationContainer, useNavigation } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\n\nvar asyncStore = require(\"./utility/AsyncStore\");\n\nvar Stack = createStackNavigator();\nimport Landing from \"./app/Landing/Landing\";\nimport Login from \"./app/Login/Login\";\nimport SignUp from \"./app/SignUp/SignUp\";\nimport Feed from \"./app/Feed/Feed\";\nimport Deets from \"./app/Deets/Deets\";\nimport Game from \"./app/Game/Game\";\nimport Tile from \"./app/shared/Tile\";\nimport Board from \"./app/Game/components/Board\";\nimport Waiting from \"./app/Waiting/Waiting\";\nimport Global from \"./utility/Global\";\nimport Join from \"./app/Join/Join\";\nimport Winners from \"./app/Winners/Winners\";\nimport AdminGame from \"./app/Admin/AdminGame\";\nimport RoomCreation from \"./app/RoomCreation/RoomCreation\";\nconsole.disableYellowBox = true;\n\nvar getFonts = function getFonts() {\n  return Font.loadAsync({\n    \"roboto-regular\": require(\"./assets/fonts/roboto-regular.ttf\"),\n    \"roboto-100\": require(\"./assets/fonts/roboto-100.ttf\"),\n    \"roboto-900\": require(\"./assets/fonts/roboto-900.ttf\"),\n    \"roboto-700\": require(\"./assets/fonts/roboto-700.ttf\"),\n    \"roboto-300\": require(\"./assets/fonts/roboto-300.ttf\"),\n    \"roboto-500\": require(\"./assets/fonts/roboto-500.ttf\")\n  });\n};\n\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      fontLoaded = _useState2[0],\n      setfontLoaded = _useState2[1];\n\n  var _useState3 = useState(\"Landing\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      initRoute = _useState4[0],\n      setinitRoute = _useState4[1];\n\n  useEffect(function () {\n    asyncStore.getData().then(function (val) {\n      if (val.isLoggedin === true) {\n        console.log(\"User logged in\");\n        Global.isLoggedin = val.isLoggedin;\n        Global.roomID = null;\n        Global.username = val.username;\n        setinitRoute(\"Feed\");\n      }\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }, []);\n\n  if (!fontLoaded) {\n    return React.createElement(AppLoading, {\n      startAsync: getFonts,\n      onFinish: function onFinish() {\n        return setfontLoaded(true);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    });\n  } else {\n    return React.createElement(NavigationContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, React.createElement(Stack.Navigator, {\n      initialRouteName: initRoute,\n      screenOptions: {\n        headerShown: false\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, React.createElement(Stack.Screen, {\n      name: \"Landing\",\n      component: Landing,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"Login\",\n      component: Login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"Signup\",\n      component: SignUp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"Feed\",\n      component: Feed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"Waiting\",\n      component: Waiting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"Game\",\n      component: Game,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"Deets\",\n      component: Deets,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"Winners\",\n      component: Winners,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"AdminGame\",\n      component: AdminGame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"RoomCreation\",\n      component: RoomCreation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    })));\n  }\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["/media/yajat-vishwakk/MainHDD/Coding/Projects/TambolaV2/frontend/Tambola/App.js"],"names":["React","useState","useEffect","AppLoading","Font","NavigationContainer","useNavigation","createStackNavigator","asyncStore","require","Stack","Landing","Login","SignUp","Feed","Deets","Game","Tile","Board","Waiting","Global","Join","Winners","AdminGame","RoomCreation","console","disableYellowBox","getFonts","loadAsync","App","fontLoaded","setfontLoaded","initRoute","setinitRoute","getData","then","val","isLoggedin","log","roomID","username","catch","err","headerShown","styles","StyleSheet","create","container","flex"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport { AppLoading } from \"expo\";\nimport * as Font from \"expo-font\";\nimport { NavigationContainer, useNavigation } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\n\nconst asyncStore = require(\"./utility/AsyncStore\");\nconst Stack = createStackNavigator();\n\nimport Landing from \"./app/Landing/Landing\";\nimport Login from \"./app/Login/Login\";\nimport SignUp from \"./app/SignUp/SignUp\";\nimport Feed from \"./app/Feed/Feed\";\nimport Deets from \"./app/Deets/Deets\";\nimport Game from \"./app/Game/Game\";\nimport Tile from \"./app/shared/Tile\";\nimport Board from \"./app/Game/components/Board\";\nimport Waiting from \"./app/Waiting/Waiting\";\nimport Global from \"./utility/Global\";\nimport Join from \"./app/Join/Join\";\nimport Winners from \"./app/Winners/Winners\";\nimport AdminGame from \"./app/Admin/AdminGame\";\nimport RoomCreation from \"./app/RoomCreation/RoomCreation\";\n\nconsole.disableYellowBox = true;\n\nconst getFonts = () => {\n  return Font.loadAsync({\n    \"roboto-regular\": require(\"./assets/fonts/roboto-regular.ttf\"),\n    \"roboto-100\": require(\"./assets/fonts/roboto-100.ttf\"),\n    \"roboto-900\": require(\"./assets/fonts/roboto-900.ttf\"),\n    \"roboto-700\": require(\"./assets/fonts/roboto-700.ttf\"),\n    \"roboto-300\": require(\"./assets/fonts/roboto-300.ttf\"),\n    \"roboto-500\": require(\"./assets/fonts/roboto-500.ttf\"),\n  });\n};\n\nexport default function App() {\n  const [fontLoaded, setfontLoaded] = useState(false);\n  const [initRoute, setinitRoute] = useState(\"Landing\");\n\n  useEffect(() => {\n    asyncStore\n      .getData()\n      .then((val) => {\n        if (val.isLoggedin === true) {\n          console.log(\"User logged in\");\n          Global.isLoggedin = val.isLoggedin;\n          Global.roomID = null;\n          Global.username = val.username;\n          setinitRoute(\"Feed\");\n        }\n\n        // use this for logout later\n        // asyncStore.deleteData().then((val) => {\n        //   console.log(val);\n        // });\n        // console.log(val);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  if (!fontLoaded) {\n    return (\n      <AppLoading startAsync={getFonts} onFinish={() => setfontLoaded(true)} />\n    );\n  } else {\n    return (\n      <NavigationContainer>\n        <Stack.Navigator\n          initialRouteName={initRoute}\n          screenOptions={{\n            headerShown: false,\n          }}\n        >\n          <Stack.Screen name=\"Landing\" component={Landing} />\n          <Stack.Screen name=\"Login\" component={Login} />\n          <Stack.Screen name=\"Signup\" component={SignUp} />\n          <Stack.Screen name=\"Feed\" component={Feed} />\n          <Stack.Screen name=\"Waiting\" component={Waiting} />\n          <Stack.Screen name=\"Game\" component={Game} />\n          <Stack.Screen name=\"Deets\" component={Deets} />\n          <Stack.Screen name=\"Winners\" component={Winners} />\n          <Stack.Screen name=\"AdminGame\" component={AdminGame} />\n          <Stack.Screen name=\"RoomCreation\" component={RoomCreation} />\n        </Stack.Navigator>\n      </NavigationContainer>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}